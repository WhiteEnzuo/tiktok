<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b31ff907-0fcd-4857-9c29-e87d62bba57b" name="Changes" comment="点赞">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UserService/service/initMQ.go" beforeDir="false" afterPath="$PROJECT_DIR$/UserService/service/initMQ.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UserService/service/likeServiceImpl.go" beforeDir="false" afterPath="$PROJECT_DIR$/UserService/service/likeServiceImpl.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://D:/GO/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2LJpUyCUaxMuaFaEh92NPXQEGtR" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mechrevo&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;
    ]
  }
}</component>
  <component name="RunManager" selected="Go Test.TestLikeAction in UserService/service (1)">
    <configuration name="TestGetLikeList in UserService/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Tiktok" />
      <working_directory value="$PROJECT_DIR$/UserService/service" />
      <root_directory value="$PROJECT_DIR$/UserService" />
      <kind value="PACKAGE" />
      <package value="UserService/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetLikeList\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLikeAction in UserService/service (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Tiktok" />
      <working_directory value="$PROJECT_DIR$/UserService/service" />
      <root_directory value="$PROJECT_DIR$/UserService" />
      <kind value="PACKAGE" />
      <package value="UserService/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLikeAction\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLikeAction in UserService/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Tiktok" />
      <working_directory value="$PROJECT_DIR$/UserService/service" />
      <root_directory value="$PROJECT_DIR$/UserService" />
      <kind value="PACKAGE" />
      <package value="UserService/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLikeAction\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLikeListCount in UserService/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Tiktok" />
      <working_directory value="$PROJECT_DIR$/UserService/service" />
      <root_directory value="$PROJECT_DIR$/UserService" />
      <kind value="PACKAGE" />
      <package value="UserService/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLikeListCount\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestVideoLikeCount in UserService/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Tiktok" />
      <working_directory value="$PROJECT_DIR$/UserService/service" />
      <root_directory value="$PROJECT_DIR$/UserService" />
      <kind value="PACKAGE" />
      <package value="UserService/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestVideoLikeCount\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Test.TestLikeAction in UserService/service (1)" />
      <item itemvalue="Go Test.TestGetLikeList in UserService/service" />
      <item itemvalue="Go Test.TestLikeListCount in UserService/service" />
      <item itemvalue="Go Test.TestVideoLikeCount in UserService/service" />
      <item itemvalue="Go Test.TestLikeAction in UserService/service" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestLikeAction in UserService/service (1)" />
        <item itemvalue="Go Test.TestLikeAction in UserService/service" />
        <item itemvalue="Go Test.TestGetLikeList in UserService/service" />
        <item itemvalue="Go Test.TestVideoLikeCount in UserService/service" />
        <item itemvalue="Go Test.TestLikeListCount in UserService/service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="点赞" />
    <option name="LAST_COMMIT_MESSAGE" value="点赞" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/UserService/service/likeServiceImpl.go</url>
          <line>255</line>
          <option name="timeStamp" value="207" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/UserService/service/likeServiceImpl.go</url>
          <line>171</line>
          <option name="timeStamp" value="230" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoTestRunConfiguration">
        <watch expression="Host" />
        <watch expression="err" />
      </configuration>
    </watches-manager>
  </component>
</project>